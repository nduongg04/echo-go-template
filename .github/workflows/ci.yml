name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: echo_store_test
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: "1.21"

            - name: Install dependencies
              run: go mod download

            - name: Run linter
              uses: golangci/golangci-lint-action@v3
              with:
                  version: latest

            - name: Run tests
              run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
              env:
                  DB_HOST: localhost
                  DB_PORT: 5432
                  DB_USER: postgres
                  DB_PASS: postgres
                  DB_NAME: echo_store_test

            - name: Upload coverage
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.txt
                  flags: unittests

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: test
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        steps:
            - uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./deployments/Dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/echo-store-api:latest
